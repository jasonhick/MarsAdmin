Imports System.Data.SqlClient
Imports System.Data
Imports System.IO

Partial Class SweetJars
    Inherits System.Web.UI.Page


    Protected Function GetItemFields(ByVal BasketItemID As Integer) As String

        Dim retVal As String = ""

        '## Create Instance of Connection and Command Object
        Dim myConnection As SqlConnection = New SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings("NAPConnectionString").ConnectionString)
        Dim myCommand As SqlCommand = New SqlCommand("FieldValues_s", myConnection)
        '## Mark the Command as a SPROC
        myCommand.CommandType = CommandType.StoredProcedure
        myCommand.Parameters.Add(New SqlParameter("@BasketItemID", SqlDbType.Int))
        myCommand.Parameters("@BasketItemID").Value = BasketItemID
        '## Execute the command
        myConnection.Open()

        '#Dim result As SqlDataReader = myCommand.ExecuteReader(CommandBehavior.CloseConnection)
        Dim result As SqlDataReader = myCommand.ExecuteReader()
        For Each item In result
            retVal &= """" & Server.UrlDecode(item(3).ToString) & """" & ","
        Next

        myConnection.Close()
        myConnection.Dispose()

        Return retVal
    End Function

    Protected Function CheckEmptyString(ByVal s As String) As String
        Dim retVal As String = ""
        Select Case s
            Case "0"
                retVal = ""
            Case Else
                retVal = " (" & s & ")"
        End Select
        Return Server.HtmlDecode(retVal)
    End Function

    Sub ProcessOrders(ByVal Sender As Object, ByVal E As EventArgs)
        Dim arrOrders As Array
        Dim myOrders As New Orders()
        arrOrders = Split(Request("myOrders"), ",")
        Dim myEnum As System.Collections.IEnumerator = arrOrders.GetEnumerator()
        While myEnum.MoveNext()
            myOrders.UpdateOrderStatus(myEnum.Current, "Waiting to be despatched", "N", "N")
        End While
        GridView1.DataBind()
    End Sub

    Protected Sub btnExportLabels_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnExportLabels.Click

        Dim filename As String
        filename = "Labels_" & Year(Date.Now) & Month(Date.Now) & Day(Date.Now) & "_" & Hour(Date.Now) & Minute(Date.Now) & ".txt"

        Response.Clear()
        Response.ClearHeaders()
        Response.ContentType = "application/text"
        Response.AppendHeader("Content-Disposition", "attachment;filename=" & filename)

        ' StringBuilder object
        Dim str As New StringBuilder()
        For i As Integer = 0 To GridView1.Rows.Count - 1
            Dim row As GridViewRow = GridView1.Rows(i)
            Dim chkBox As CheckBox = DirectCast(row.FindControl("chkSelect"), CheckBox)
            If chkBox.Checked = True Then
                str.AppendLine(GetItemFields(chkBox.Text))
            End If
        Next
        Response.Write("Occasion,Name,Message" + vbNewLine + str.ToString())
        Response.End()

    End Sub

End Class
